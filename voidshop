-- LocalScript
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")

local player = Players.LocalPlayer
local placeId = game.PlaceId
local currentJobId = game.JobId

local function notify(title, text)
    pcall(function()
        StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = 3
        })
    end)
end

local function hop()
    local success, result = pcall(function()
        return HttpService:JSONDecode(
            game:HttpGet("https://games.roblox.com/v1/games/" .. placeId .. "/servers/Public?sortOrder=Asc&limit=100")
        )
    end)

    if success and result and result.data then
        local servers = {}
        for _, server in ipairs(result.data) do
            if server.playing < server.maxPlayers and server.id ~= currentJobId then
                table.insert(servers, server.id)
            end
        end

        if #servers > 0 then
            local target = servers[math.random(1, #servers)]
            notify("Server Hop", "Teleporting to new server...")
            TeleportService:TeleportToPlaceInstance(placeId, target, player)
        else
            notify("Server Hop", "No valid servers, retrying...")
        end
    else
        notify("Server Hop", "Failed to fetch servers, retrying...")
    end
end

-- try every second until teleport works
while task.wait(1) do
    hop()
end
